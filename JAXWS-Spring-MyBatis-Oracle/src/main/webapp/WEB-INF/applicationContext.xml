<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:ws="http://jax-ws.dev.java.net/spring/core" xmlns:wss="http://jax-ws.dev.java.net/spring/servlet"
    xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd	
    http://jax-ws.dev.java.net/spring/core http://jax-ws.dev.java.net/spring/core.xsd
    http://jax-ws.dev.java.net/spring/servlet http://jax-ws.dev.java.net/spring/servlet.xsd">
    
	<context:property-placeholder location="classpath:jdbc.properties" />    
    
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="${jdbc.driverClassName}"/>
		<property name="jdbcUrl" value="${jdbc.url}"/>
		<property name="user" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
		<property name="minPoolSize" value="${jdbc.pool.minsize}"/>
		<property name="maxPoolSize" value="${jdbc.pool.maxsize}"/>
	</bean>
 
     <!-- Transaction manager, use JtaTransactionManager for global tx -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
    
    <!-- Enable auto wire -->
    <context:annotation-config />
    
    <!-- Enable component scanning (beware that this does not enable mapper scanning!) -->    
    <context:component-scan base-package="th.co.mwa.cis.business.service.impl" />
 
    <!-- Enable transaction demarcation with annotations -->
    <tx:annotation-driven />
 
     <!-- Define the SqlSessionFactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="typeAliasesPackage" value="th.co.mwa.cis.business.domain" />
    </bean>

    <!-- Scan for mappers and let them be auto wired -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="th.co.mwa.cis.business.persistence" />
    </bean>
 
 	<!-- Web Service binding definition -->
    <wss:binding url="/hello">
        <wss:service>
            <ws:service bean="#helloWebServices"/>
        </wss:service>      
    </wss:binding>
    
	<wss:binding url="/employee">
        <wss:service>
            <ws:service bean="#employeeWebServices"/>
        </wss:service>
    </wss:binding>

    <!-- Web service methods definition -->
    <bean id="helloWebServices" class="th.co.mwa.cis.webservice.HelloWebService">
    	<property name="hello" ref="helloBean" />
    </bean>
    
    <bean id="employeeWebServices" class="th.co.mwa.cis.webservice.EmployeeInformationWebService">
    	<property name="employeeInformation" ref="employeeInformationBean" />
    </bean>    
    
    <!-- Spring Beans definition -->
    <bean id="helloBean" class="th.co.mwa.cis.business.service.impl.HelloImpl" />
    
    <bean id="employeeInformationBean" class="th.co.mwa.cis.business.service.impl.EmployeeInformationServiceImpl" />
    
</beans>